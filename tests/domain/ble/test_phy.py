from whad.ble.utils.phy import channel_to_frequency,frequency_to_channel,crc
import pytest

@pytest.mark.parametrize("test_input, expected", [
    ( 2402000000, 37 ),
    ( 2404000000, 0 ),
    ( 2406000000, 1 ),
    ( 2408000000, 2 ),
    ( 2410000000, 3 ),
    ( 2412000000, 4 ),
    ( 2414000000, 5 ),
    ( 2416000000, 6 ),
    ( 2418000000, 7 ),
    ( 2420000000, 8 ),
    ( 2422000000, 9 ),
    ( 2424000000, 10 ),
    ( 2426000000, 38 ),
    ( 2428000000, 11 ),
    ( 2430000000, 12 ),
    ( 2432000000, 13 ),
    ( 2434000000, 14 ),
    ( 2436000000, 15 ),
    ( 2438000000, 16 ),
    ( 2440000000, 17 ),
    ( 2442000000, 18 ),
    ( 2444000000, 19 ),
    ( 2446000000, 20 ),
    ( 2448000000, 21 ),
    ( 2450000000, 22 ),
    ( 2452000000, 23 ),
    ( 2454000000, 24 ),
    ( 2456000000, 25 ),
    ( 2458000000, 26 ),
    ( 2460000000, 27 ),
    ( 2462000000, 28 ),
    ( 2464000000, 29 ),
    ( 2466000000, 30 ),
    ( 2468000000, 31 ),
    ( 2470000000, 32 ),
    ( 2472000000, 33 ),
    ( 2474000000, 34 ),
    ( 2476000000, 35 ),
    ( 2478000000, 36 ),
    ( 2480000000, 39 ),
    ( "test", None),
    ( 3000, None)
    ])
def test_frequency_to_channel(test_input, expected):
    assert frequency_to_channel(test_input) == expected

@pytest.mark.parametrize("test_input, expected", [
    ( 37, 2402000000 ),
    ( 0, 2404000000 ),
    ( 1, 2406000000 ),
    ( 2, 2408000000 ),
    ( 3, 2410000000 ),
    ( 4, 2412000000 ),
    ( 5, 2414000000 ),
    ( 6, 2416000000 ),
    ( 7, 2418000000 ),
    ( 8, 2420000000 ),
    ( 9, 2422000000 ),
    ( 10, 2424000000 ),
    ( 38, 2426000000 ),
    ( 11, 2428000000 ),
    ( 12, 2430000000 ),
    ( 13, 2432000000 ),
    ( 14, 2434000000 ),
    ( 15, 2436000000 ),
    ( 16, 2438000000 ),
    ( 17, 2440000000 ),
    ( 18, 2442000000 ),
    ( 19, 2444000000 ),
    ( 20, 2446000000 ),
    ( 21, 2448000000 ),
    ( 22, 2450000000 ),
    ( 23, 2452000000 ),
    ( 24, 2454000000 ),
    ( 25, 2456000000 ),
    ( 26, 2458000000 ),
    ( 27, 2460000000 ),
    ( 28, 2462000000 ),
    ( 29, 2464000000 ),
    ( 30, 2466000000 ),
    ( 31, 2468000000 ),
    ( 32, 2470000000 ),
    ( 33, 2472000000 ),
    ( 34, 2474000000 ),
    ( 35, 2476000000 ),
    ( 36, 2478000000 ),
    ( 39, 2480000000 ),
    ( "test", None ),
    ( 42, None )

    ])
def test_channel_to_frequency(test_input, expected):
    assert channel_to_frequency(test_input) == expected


@pytest.mark.parametrize("test_input, expected", [
    ( "0215110006000461ca0ce41b1e430559ac74e382667051", "545d96" ),
    ])

def test_crc(test_input, expected):
    data = bytes.fromhex(test_input)
    crc_value = bytes.fromhex(expected)
    assert crc(data) == crc_value
